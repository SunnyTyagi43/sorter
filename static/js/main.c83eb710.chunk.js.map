{"version":3,"sources":["logo.svg","Algorithms/Algorithms.jsx","Sorter/Sorter.jsx","App.js","reportWebVitals.js","index.js"],"names":["swap","arr","i","j","quickSortHelper","low","high","totalstep","pi","partition","k","push","tmp","mergeSortHelper","mainArray","startIndex","endIndex","auxillaryArray","middleIndex","Math","floor","doMerge","Sorter","props","state","array","message","showMessage","this","initializeArray","array1","n","window","screen","width","min","max","random","setState","totalStep","length","slice","mergeSort","iscol","divNum","document","getElementsByClassName","FirstNumber","SecondNumber","FirstNumberStyle","style","SecondNumberStyle","color","setTimeout","backgroundColor","barIndex","newBarHeight","height","parseInt","match","arraySortedOrNot","quickSort","isSwapped","bubbleSort","key","insertionSort","className","map","val","indx","onClick","marginTop","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c83eb710.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\n//InsertionSort\n\nexport const insertionSort=(arr)=>{\n\n    let totalstep=[];\n    \n    let key,j;\n    \n    for(let i=1;i<arr.length;i++){\n    \n        key=arr[i];\n    \n        j=i-1;\n    \n        while(j>=0 && arr[j]>key){\n    \n            totalstep.push(['red',j+1,j])\n    \n            totalstep.push(['#007acc',j+1,j])\n    \n            totalstep.push(['none',j+1,arr[j]])\n    \n            arr[j+1]=arr[j];\n    \n            j--;\n    \n        }\n    \n        totalstep.push(['none',j+1,key])\n    \n        arr[j+1]=key;\n    \n    }\n    \n    return totalstep;\n}\n\n//BubbleSort\n\nexport const bubbleSort=(arr)=>{\n    \n    let totalstep=[];\n\n    let isSwapped=false;\n    \n    for(let i=0;i<arr.length-1;i++){\n\n        isSwapped=false;\n\n        for(let j=0;j<arr.length-i-1;j++){\n\n            totalstep.push(['red',j,j+1]);\n\n            totalstep.push(['#007acc',j,j+1]);\n            \n            if(arr[j]>arr[j+1]){\n\n                totalstep.push(['none',j,j+1]);\n\n                swap(arr,j,j+1);\n\n                isSwapped=true;\n\n            }\n\n        }\n\n        if(!isSwapped) break;\n\n    }\n    return totalstep;\n}\n\nconst swap=(arr,i,j)=>{\n\n    arr[i]=arr[i]+arr[j];\n\n    arr[j]=arr[i]-arr[j];\n\n    arr[i]=arr[i]-arr[j];\n\n}\n\n\n// QuickSort\n\nexport const quickSort=(arr)=>{\n\n    let totalstep=[];\n\n    if(arr.length<=1) return arr;\n\n    quickSortHelper(arr,0,arr.length-1,totalstep);\n\n    return totalstep;\n\n}\n\nconst quickSortHelper=(arr,low,high,totalstep)=>{\n\n    if(low<high){\n\n        let pi=partition(arr,low,high,totalstep);\n\n        quickSortHelper(arr,low,pi-1,totalstep);\n\n        quickSortHelper(arr,pi+1,high,totalstep);\n\n    }\n\n}\n\nconst partition=(arr,low,high,totalstep)=>{\n\n    let pi=arr[high];\n\n    let k=low-1;\n\n    for(let i=low;i<=high;i++){\n\n        totalstep.push(['red',i,high]);\n\n        totalstep.push(['#007acc',i,high]);\n\n        if(arr[i]<pi){\n\n            k++;\n\n            totalstep.push(['none',i,k]);\n\n            let tmp=arr[i];\n\n            arr[i]=arr[k];\n\n            arr[k]=tmp;\n            \n\n        }\n\n    }\n\n    totalstep.push(['red',k+1,high]);\n\n    totalstep.push(['#007acc',k+1,high]);\n\n    totalstep.push(['none',k+1,high]);\n\n    let tmp=arr[k+1];\n\n    arr[k+1]=arr[high];\n\n    arr[high]=tmp;\n\n    return k+1;\n}\n\n\n//MergeSort\n\nexport const mergeSort=(arr)=>{\n\n    const totalstep=[];\n\n    if(arr.length<=1) return arr;\n\n    const auxillaryArray=arr.slice();\n\n    mergeSortHelper(arr,0,arr.length-1,auxillaryArray,totalstep);\n\n    return totalstep;\n\n}\n\n\nconst mergeSortHelper=(mainArray,startIndex,endIndex,auxillaryArray,totalstep)=>{\n\n    if(startIndex===endIndex) return;\n\n    const middleIndex=Math.floor((endIndex+startIndex)/2);\n\n    mergeSortHelper(auxillaryArray,startIndex,middleIndex,mainArray,totalstep);\n\n    mergeSortHelper(auxillaryArray,middleIndex+1,endIndex,mainArray,totalstep);\n\n    doMerge(mainArray,startIndex,middleIndex,endIndex,auxillaryArray,totalstep);\n\n}\n\nconst doMerge=(mainArray,startIndex,middleIndex,endIndex,auxillaryArray,totalstep)=>{\n\n    let k=startIndex;\n\n    let i=startIndex;\n\n    let j=middleIndex+1;\n\n    while(i<=middleIndex && j<=endIndex){\n\n        totalstep.push([i,j]);\n\n        totalstep.push([i,j]);\n\n        if(auxillaryArray[i]<=auxillaryArray[j]){\n\n            totalstep.push([k,auxillaryArray[i]]);\n\n            mainArray[k++]=auxillaryArray[i++];\n\n        }else{\n\n            totalstep.push([k,auxillaryArray[j]]);\n\n            mainArray[k++]=auxillaryArray[j++];\n\n        }\n\n    }\n\n    while(i<=middleIndex){\n\n        totalstep.push([i,i]);\n\n        totalstep.push([i,i]);\n\n        totalstep.push([k,auxillaryArray[i]]);\n\n        mainArray[k++]=auxillaryArray[i++];\n\n    }\n\n    while(j<=endIndex){\n\n        totalstep.push([j,j]);\n\n        totalstep.push([j,j]);\n\n        totalstep.push([k,auxillaryArray[j]]);\n\n        mainArray[k++]=auxillaryArray[j++];\n\n    }\n\n};","import React,{Component} from 'react';\nimport \"../App.css\";\nimport { mergeSort,quickSort,bubbleSort,insertionSort } from '../Algorithms/Algorithms';\nimport './Sorter.css';\n\nfunction getRandomNumber(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default class Sorter extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            array:[],\n            message:\"\",\n            showMessage:false\n        };\n    }\n\n    componentDidMount(){\n        this.initializeArray();\n    }\n\n    initializeArray(){\n        if(this.state.message===\"\"){\n            const array1=[];\n            let n=window.screen.width/8;\n            for(let i=0;i<n;i++){\n                array1.push(getRandomNumber(5,500));\n            }\n            this.setState({array:array1});\n        }else{\n            this.setState({showMessage:true})\n            \n        }\n    }\n\n    mergeSort(){\n        // let arr1=this.state.array.slice().sort((a,b)=>a-b);\n        // let arr2=mergeSort([...this.state.array]);\n\n        // console.log(isArrayEqual(arr1,arr2));\n        if(this.state.message===\"\"){\n            this.setState({message:\"MergeSort is already running. please wait....\"});\n            const totalStep=mergeSort([...this.state.array]);\n            let n=totalStep.length;\n            for(let i=0;i<totalStep.length;i++){\n                let iscol=i%3!==2;\n                let divNum=document.getElementsByClassName('array-bar');\n                if(iscol){\n                    let [FirstNumber,SecondNumber]=totalStep[i];\n                    let FirstNumberStyle=divNum[FirstNumber].style;\n                    let SecondNumberStyle=divNum[SecondNumber].style;\n                    const color=i%3===0?'red':'#007acc';\n                    setTimeout(() => {\n                        FirstNumberStyle.backgroundColor=color;\n                        SecondNumberStyle.backgroundColor=color;\n                        if(i===n-1){\n                            this.setState({message:\"\"});\n                            this.setState({showMessage:false});\n                        }\n                    }, i*5);\n                }else{\n                    setTimeout(() => {\n                        let [barIndex,newBarHeight]=totalStep[i];\n                        let barStyle=divNum[barIndex].style;\n                        barStyle.height=`${newBarHeight}px`;\n                        if(i===n-1){\n                            this.setState({message:\"\"});\n                            this.setState({showMessage:false});\n                        }\n                    }, i*5);\n                }\n                \n\n            }\n            \n        }else{\n            this.setState({showMessage:true});\n        }\n\n    }\n\n    quickSort(){\n        // let arr1=this.state.array.slice().sort((a,b)=>a-b);\n        // let arr2=quickSort([...this.state.array]);\n\n        // console.log(isArrayEqual(arr1,arr2));\n        let divNum=document.getElementsByClassName('array-bar');\n        let height=[];\n        for(let i=0;i<divNum.length;i++){\n            height.push(parseInt(divNum[i].style.height.match(/(\\d+)/)[0]));\n        }\n        let n=height.length;\n        // console.log(\"sort\",arraySortedOrNot(height,n));\n        if(arraySortedOrNot(height,n)===0){ //Array is not sorted\n            // this.setState({message:\"Array is not sorted\"});\n            if(this.state.message===\"\"){\n                this.setState({message:\"quickSort is already running. please wait....\"})\n\n                const totalStep=quickSort([...this.state.array]);\n                for(let i=0;i<totalStep.length;i++){\n\n                    let divNum=document.getElementsByClassName('array-bar');\n                    let [color,FirstNumber,SecondNumber]=totalStep[i];\n                    let FirstNumberStyle=divNum[FirstNumber].style;\n                    let SecondNumberStyle=divNum[SecondNumber].style;\n\n                    let iscol=color!=='none';\n                    \n                    \n                    if(iscol){\n                        \n                        // const color=i%3===0?'red':'#007acc';\n                        setTimeout(() => {\n                            FirstNumberStyle.backgroundColor=color;\n                            SecondNumberStyle.backgroundColor=color;\n                            if(i===totalStep.length-1){\n                                this.setState({message:\"\"});\n                                this.setState({showMessage:false});\n                            }\n                        }, i*5);\n                    }else{\n                        setTimeout(() => {\n                            \n                            \n                            let tmp=FirstNumberStyle.height;\n                            FirstNumberStyle.height=SecondNumberStyle.height;\n                            SecondNumberStyle.height=tmp;\n                            if(i===totalStep.length-1){\n                                this.setState({message:\"\"});\n                                this.setState({showMessage:false});\n                            }\n                            // barStyle.height=`${newBarHeight}px`;\n                        }, i*5);\n                    }\n\n                }\n\n            }else{\n                this.setState({showMessage:true});\n            }\n        }else{\n            this.setState({showMessage:true,message:\"Array is Already sorted, you can generate new array...\"});\n            setTimeout(() => {\n                this.setState({showMessage:false,message:\"\"})\n            }, 2000);\n        }\n    }\n\n    bubbleSort(){\n        // let arr1=this.state.array.slice().sort((a,b)=>a-b);\n        // let arr2=bubbleSort([...this.state.array]);\n\n        // console.log(isArrayEqual(arr1,arr2));\n        let divNum=document.getElementsByClassName('array-bar');\n        let height=[];\n        for(let i=0;i<divNum.length;i++){\n            height.push(parseInt(divNum[i].style.height.match(/(\\d+)/)[0]));\n        }\n        let n=height.length;\n        // console.log(\"sort\",arraySortedOrNot(height,n));\n        if(arraySortedOrNot(height,n)===0){ //Array is not sorted\n            // this.setState({message:\"Array is not sorted\"});\n            if(this.state.message===\"\"){\n                this.setState({message:\"bubbleSort is already running. please wait....\"})\n    \n                const totalStep=bubbleSort([...this.state.array]);\n                // console.log(totalStep);\n                for(let i=0;i<totalStep.length;i++){\n    \n                    // let divNum=document.getElementsByClassName('array-bar');\n                    let [color,FirstNumber,SecondNumber]=totalStep[i];\n                    let FirstNumberStyle=divNum[FirstNumber].style;\n                    let SecondNumberStyle=divNum[SecondNumber].style;\n    \n                    let iscol=color!=='none';\n                    \n                    \n                    if(iscol){\n                        \n                        // const color=i%3===0?'red':'#007acc';\n                        setTimeout(() => {\n                            FirstNumberStyle.backgroundColor=color;\n                            SecondNumberStyle.backgroundColor=color;\n                            if(i===totalStep.length-1){\n                                this.setState({message:\"\"});\n                                this.setState({showMessage:false});\n                            }\n                        }, i*1);\n                    }else{\n                        setTimeout(() => {\n                            \n                            \n                            let tmp=FirstNumberStyle.height;\n                            FirstNumberStyle.height=SecondNumberStyle.height;\n                            SecondNumberStyle.height=tmp;\n                            if(i===totalStep.length-1){\n                                this.setState({message:\"\"});\n                                this.setState({showMessage:false});\n                            }\n                            // barStyle.height=`${newBarHeight}px`;\n                        }, i*1);\n                    }\n    \n                }\n            }else{\n                this.setState({showMessage:true});\n            }\n        }else{\n            this.setState({showMessage:true,message:\"Array is Already sorted, you can generate new array...\"});\n            setTimeout(() => {\n                this.setState({showMessage:false,message:\"\"})\n            }, 2000);\n        }\n        // console.log(\"h\",height);\n\n\n\n        \n    }\n\n    insertionSort(){\n\n        // let arr1=this.state.array.slice().sort((a,b)=>a-b);\n        // let arr2=insertionSort([...this.state.array]);\n\n        // console.log(isArrayEqual(arr1,arr2));\n\n        if(this.state.message===\"\"){\n            this.setState({message:\"insertionSort is already running. please wait....\"})\n\n            const totalStep=insertionSort([...this.state.array]);\n            for(let i=0;i<totalStep.length;i++){\n                let divNum=document.getElementsByClassName('array-bar');\n                let [color,FirstNumber,SecondNumber]=totalStep[i];\n                \n\n                let iscol=color!=='none';\n                \n                \n                if(iscol){\n                    let FirstNumberStyle=divNum[FirstNumber].style;\n                    let SecondNumberStyle=divNum[SecondNumber].style;\n                    // const color=i%3===0?'red':'#007acc';\n                    setTimeout(() => {\n                        FirstNumberStyle.backgroundColor=color;\n                        SecondNumberStyle.backgroundColor=color;\n                        if(i===totalStep.length-1){\n                            this.setState({message:\"\"});\n                            this.setState({showMessage:false});\n                        }\n                    }, i*1);\n                }else{\n                    setTimeout(() => {\n                        // let barStyle=divNum[FirstNumber].style;\n                        // let [barIndex,newBarHeight]=totalStep[i];\n                        let barStyle=divNum[FirstNumber].style;\n                        barStyle.height=`${SecondNumber}px`;\n                        if(i===totalStep.length-1){\n                            this.setState({message:\"\"});\n                            this.setState({showMessage:false});\n                        }\n                    }, i*1);\n                }\n\n            }\n\n        }else{\n            this.setState({showMessage:true});\n        }\n\n        \n    }\n\n\n\n    render(){\n        const {array}=this.state;\n        // console.log(\"r\",array);\n        return(\n            <div>\n                <div>\n                    <div className=\"header\">\n                        Sorter\n                    </div>\n                    <div className=\"message\">\n                        <span >by Sunny Tyagi</span>\n                        {this.state.showMessage?this.state.message:\"\"}\n                    </div>\n                </div>\n                <div className=\"array-container\">\n                \n                    {array.map((val,indx)=>(\n                        <div className=\"array-bar\" style={{height:`${val}px`}} key={indx}>\n                        </div>\n                    ))}\n                    \n                </div>\n\n                <div className=\"\">\n                    <button className=\"buttons\" onClick={()=>this.initializeArray()} style={{marginTop:'5px'}}>Generate New Array</button>\n                    <button className=\"buttons\" onClick={()=>this.quickSort()} style={{marginTop:'5px'}}>Quick Sort</button>\n                    <button className=\"buttons\" onClick={()=>this.mergeSort()} style={{marginTop:'5px'}}>Merge Sort</button>\n                    <button className=\"buttons\" onClick={()=>this.bubbleSort()} style={{marginTop:'5px'}}>Bubble Sort</button>\n                    <button className=\"buttons\" onClick={()=>this.insertionSort()} style={{marginTop:'5px'}}>Insertion Sort</button>\n                </div>\n            </div>\n            \n            \n        );\n    }\n}\n\n\n\nfunction arraySortedOrNot(arr, n)\n{\n     \n    // Array has one or no element or the\n    // rest are already checked and approved.\n    if (n == 1 || n == 0)\n        return 1;\n \n    // Unsorted pair found (Equal values allowed)\n    if (arr[n - 1] < arr[n - 2])\n        return 0;\n \n    // Last pair was sorted\n    // Keep on checking\n    return arraySortedOrNot(arr, n - 1);\n}\n\nfunction isArrayEqual(left,right) {\n    if(left.length!==right.length) return false\n    let i=0\n    while(i<left.length){\n        if(left[i]!==right[i]) return false\n        i++\n    }\n    return true;\n}","import logo from './logo.svg';\nimport './App.css';\nimport Sorter from './Sorter/Sorter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sorter></Sorter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}